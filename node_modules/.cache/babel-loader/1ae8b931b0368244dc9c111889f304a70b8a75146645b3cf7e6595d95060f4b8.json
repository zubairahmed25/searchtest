{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar _excluded = [\"props\", \"refresh\", \"store\"],\n  _excluded2 = [\"inputElement\", \"formElement\", \"panelElement\"],\n  _excluded3 = [\"inputElement\"],\n  _excluded4 = [\"inputElement\", \"maxLength\"],\n  _excluded5 = [\"source\"],\n  _excluded6 = [\"item\", \"source\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { noop } from '@algolia/autocomplete-shared';\nimport { onInput } from './onInput';\nimport { onKeyDown as _onKeyDown } from './onKeyDown';\nimport { getActiveItem, getAutocompleteElementId, isOrContainsNode, isSamsung } from './utils';\nexport function getPropGetters(_ref) {\n  var props = _ref.props,\n    refresh = _ref.refresh,\n    store = _ref.store,\n    setters = _objectWithoutProperties(_ref, _excluded);\n  var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n      formElement = providedProps.formElement,\n      panelElement = providedProps.panelElement,\n      rest = _objectWithoutProperties(providedProps, _excluded2);\n    function onMouseDownOrTouchStart(event) {\n      // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n      // handler when it's not an interaction with Autocomplete.\n      // We detect it with the following heuristics:\n      // - the panel is closed AND there are no pending requests\n      //   (no interaction with the autocomplete, no future state updates)\n      // - OR the touched target is the input element (should open the panel)\n      var isAutocompleteInteraction = store.getState().isOpen || !store.pendingRequests.isEmpty();\n      if (!isAutocompleteInteraction || event.target === inputElement) {\n        return;\n      }\n\n      // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n      var isTargetWithinAutocomplete = [formElement, panelElement].some(function (contextNode) {\n        return isOrContainsNode(contextNode, event.target);\n      });\n      if (isTargetWithinAutocomplete === false) {\n        store.dispatch('blur', null);\n\n        // If requests are still pending when the user closes the panel, they\n        // could reopen the panel once they resolve.\n        // We want to prevent any subsequent query from reopening the panel\n        // because it would result in an unsolicited UI behavior.\n        if (!props.debug) {\n          store.pendingRequests.cancelAll();\n        }\n      }\n    }\n    return _objectSpread({\n      // We do not rely on the native `blur` event of the input to close the\n      // panel, but rather on a custom `touchstart`/`mousedown` event outside\n      // of the autocomplete elements.\n      // This ensures we don't mistakenly interpret interactions within the\n      // autocomplete (but outside of the input) as a signal to close the panel.\n      // For example, clicking reset button causes an input blur, but if\n      // `openOnFocus=true`, it shouldn't close the panel.\n      // On touch devices, scrolling results (`touchmove`) causes an input blur\n      // but shouldn't close the panel.\n      onTouchStart: onMouseDownOrTouchStart,\n      onMouseDown: onMouseDownOrTouchStart,\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove: function onTouchMove(event) {\n        if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n          return;\n        }\n        inputElement.blur();\n      }\n    }, rest);\n  };\n  var getRootProps = function getRootProps(rest) {\n    return _objectSpread({\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? store.getState().collections.map(function (_ref2) {\n        var source = _ref2.source;\n        return getAutocompleteElementId(props.id, 'list', source);\n      }).join(' ') : undefined,\n      'aria-labelledby': getAutocompleteElementId(props.id, 'label')\n    }, rest);\n  };\n  var getFormProps = function getFormProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n      rest = _objectWithoutProperties(providedProps, _excluded3);\n    return _objectSpread({\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: function onSubmit(event) {\n        var _providedProps$inputE;\n        event.preventDefault();\n        props.onSubmit(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('submit', null);\n        (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n      },\n      onReset: function onReset(event) {\n        var _providedProps$inputE2;\n        event.preventDefault();\n        props.onReset(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('reset', null);\n        (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n      }\n    }, rest);\n  };\n  var getInputProps = function getInputProps(providedProps) {\n    var _props$environment$na;\n    function onFocus(event) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: store.getState().completion || store.getState().query,\n          refresh: refresh,\n          store: store\n        }, setters));\n      }\n      store.dispatch('focus', null);\n    }\n    var _ref3 = providedProps || {},\n      inputElement = _ref3.inputElement,\n      _ref3$maxLength = _ref3.maxLength,\n      maxLength = _ref3$maxLength === void 0 ? 512 : _ref3$maxLength,\n      rest = _objectWithoutProperties(_ref3, _excluded4);\n    var activeItem = getActiveItem(store.getState());\n    var userAgent = ((_props$environment$na = props.environment.navigator) === null || _props$environment$na === void 0 ? void 0 : _props$environment$na.userAgent) || '';\n    var shouldFallbackKeyHint = isSamsung(userAgent);\n    var enterKeyHint = props.enterKeyHint || (activeItem !== null && activeItem !== void 0 && activeItem.itemUrl && !shouldFallbackKeyHint ? 'go' : 'search');\n    return _objectSpread({\n      'aria-autocomplete': 'both',\n      'aria-activedescendant': store.getState().isOpen && store.getState().activeItemId !== null ? getAutocompleteElementId(props.id, \"item-\".concat(store.getState().activeItemId), activeItem === null || activeItem === void 0 ? void 0 : activeItem.source) : undefined,\n      'aria-controls': store.getState().isOpen ? store.getState().collections.map(function (_ref4) {\n        var source = _ref4.source;\n        return getAutocompleteElementId(props.id, 'list', source);\n      }).join(' ') : undefined,\n      'aria-labelledby': getAutocompleteElementId(props.id, 'label'),\n      value: store.getState().completion || store.getState().query,\n      id: getAutocompleteElementId(props.id, 'input'),\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: enterKeyHint,\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength: maxLength,\n      type: 'search',\n      onChange: function onChange(event) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: event.currentTarget.value.slice(0, maxLength),\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown(_objectSpread({\n          event: event,\n          props: props,\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onFocus: onFocus,\n      // We don't rely on the `blur` event.\n      // See explanation in `onTouchStart`/`onMouseDown`.\n      // @MAJOR See if we need to keep this handler.\n      onBlur: noop,\n      onClick: function onClick(event) {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n          onFocus(event);\n        }\n      }\n    }, rest);\n  };\n  var getLabelProps = function getLabelProps(rest) {\n    return _objectSpread({\n      htmlFor: getAutocompleteElementId(props.id, 'input'),\n      id: getAutocompleteElementId(props.id, 'label')\n    }, rest);\n  };\n  var getListProps = function getListProps(providedProps) {\n    var _ref5 = providedProps || {},\n      source = _ref5.source,\n      rest = _objectWithoutProperties(_ref5, _excluded5);\n    return _objectSpread({\n      role: 'listbox',\n      'aria-labelledby': getAutocompleteElementId(props.id, 'label'),\n      id: getAutocompleteElementId(props.id, 'list', source)\n    }, rest);\n  };\n  var getPanelProps = function getPanelProps(rest) {\n    return _objectSpread({\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        event.preventDefault();\n      },\n      onMouseLeave: function onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      }\n    }, rest);\n  };\n  var getItemProps = function getItemProps(providedProps) {\n    var item = providedProps.item,\n      source = providedProps.source,\n      rest = _objectWithoutProperties(providedProps, _excluded6);\n    return _objectSpread({\n      id: getAutocompleteElementId(props.id, \"item-\".concat(item.__autocomplete_id), source),\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove: function onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n        store.dispatch('mousemove', item.__autocomplete_id);\n        var activeItem = getActiveItem(store.getState());\n        if (store.getState().activeItemId !== null && activeItem) {\n          var _item = activeItem.item,\n            itemInputValue = activeItem.itemInputValue,\n            itemUrl = activeItem.itemUrl,\n            _source = activeItem.source;\n          _source.onActive(_objectSpread({\n            event: event,\n            item: _item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: _source,\n            state: store.getState()\n          }, setters));\n        }\n      },\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        event.preventDefault();\n      },\n      onClick: function onClick(event) {\n        var itemInputValue = source.getItemInputValue({\n          item: item,\n          state: store.getState()\n        });\n        var itemUrl = source.getItemUrl({\n          item: item,\n          state: store.getState()\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        var runPreCommand = itemUrl ? Promise.resolve() : onInput(_objectSpread({\n          event: event,\n          nextState: {\n            isOpen: false\n          },\n          props: props,\n          query: itemInputValue,\n          refresh: refresh,\n          store: store\n        }, setters));\n        runPreCommand.then(function () {\n          source.onSelect(_objectSpread({\n            event: event,\n            item: item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: source,\n            state: store.getState()\n          }, setters));\n        });\n      }\n    }, rest);\n  };\n  return {\n    getEnvironmentProps: getEnvironmentProps,\n    getRootProps: getRootProps,\n    getFormProps: getFormProps,\n    getLabelProps: getLabelProps,\n    getInputProps: getInputProps,\n    getPanelProps: getPanelProps,\n    getListProps: getListProps,\n    getItemProps: getItemProps\n  };\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","noop","onInput","onKeyDown","_onKeyDown","getActiveItem","getAutocompleteElementId","isOrContainsNode","isSamsung","getPropGetters","_ref","props","refresh","store","setters","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","rest","onMouseDownOrTouchStart","event","isAutocompleteInteraction","getState","isOpen","pendingRequests","isEmpty","isTargetWithinAutocomplete","some","contextNode","dispatch","debug","cancelAll","onTouchStart","onMouseDown","onTouchMove","environment","document","activeElement","blur","getRootProps","role","collections","map","_ref2","id","join","getFormProps","action","noValidate","onSubmit","_providedProps$inputE","preventDefault","state","onReset","_providedProps$inputE2","focus","getInputProps","_props$environment$na","onFocus","openOnFocus","Boolean","query","completion","_ref3","_ref3$maxLength","maxLength","activeItem","userAgent","navigator","shouldFallbackKeyHint","enterKeyHint","itemUrl","activeItemId","concat","_ref4","autoComplete","autoCorrect","autoCapitalize","spellCheck","autoFocus","placeholder","type","onChange","currentTarget","slice","onBlur","onClick","getLabelProps","htmlFor","getListProps","_ref5","getPanelProps","onMouseLeave","getItemProps","item","__autocomplete_id","onMouseMove","_item","itemInputValue","_source","onActive","getItemInputValue","getItemUrl","runPreCommand","Promise","resolve","nextState","then","onSelect"],"sources":["/Users/zubairahmed/Desktop/ohpolly-zubair/node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _excluded = [\"props\", \"refresh\", \"store\"],\n  _excluded2 = [\"inputElement\", \"formElement\", \"panelElement\"],\n  _excluded3 = [\"inputElement\"],\n  _excluded4 = [\"inputElement\", \"maxLength\"],\n  _excluded5 = [\"source\"],\n  _excluded6 = [\"item\", \"source\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { noop } from '@algolia/autocomplete-shared';\nimport { onInput } from './onInput';\nimport { onKeyDown as _onKeyDown } from './onKeyDown';\nimport { getActiveItem, getAutocompleteElementId, isOrContainsNode, isSamsung } from './utils';\nexport function getPropGetters(_ref) {\n  var props = _ref.props,\n    refresh = _ref.refresh,\n    store = _ref.store,\n    setters = _objectWithoutProperties(_ref, _excluded);\n  var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n      formElement = providedProps.formElement,\n      panelElement = providedProps.panelElement,\n      rest = _objectWithoutProperties(providedProps, _excluded2);\n    function onMouseDownOrTouchStart(event) {\n      // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n      // handler when it's not an interaction with Autocomplete.\n      // We detect it with the following heuristics:\n      // - the panel is closed AND there are no pending requests\n      //   (no interaction with the autocomplete, no future state updates)\n      // - OR the touched target is the input element (should open the panel)\n      var isAutocompleteInteraction = store.getState().isOpen || !store.pendingRequests.isEmpty();\n      if (!isAutocompleteInteraction || event.target === inputElement) {\n        return;\n      }\n\n      // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n      var isTargetWithinAutocomplete = [formElement, panelElement].some(function (contextNode) {\n        return isOrContainsNode(contextNode, event.target);\n      });\n      if (isTargetWithinAutocomplete === false) {\n        store.dispatch('blur', null);\n\n        // If requests are still pending when the user closes the panel, they\n        // could reopen the panel once they resolve.\n        // We want to prevent any subsequent query from reopening the panel\n        // because it would result in an unsolicited UI behavior.\n        if (!props.debug) {\n          store.pendingRequests.cancelAll();\n        }\n      }\n    }\n    return _objectSpread({\n      // We do not rely on the native `blur` event of the input to close the\n      // panel, but rather on a custom `touchstart`/`mousedown` event outside\n      // of the autocomplete elements.\n      // This ensures we don't mistakenly interpret interactions within the\n      // autocomplete (but outside of the input) as a signal to close the panel.\n      // For example, clicking reset button causes an input blur, but if\n      // `openOnFocus=true`, it shouldn't close the panel.\n      // On touch devices, scrolling results (`touchmove`) causes an input blur\n      // but shouldn't close the panel.\n      onTouchStart: onMouseDownOrTouchStart,\n      onMouseDown: onMouseDownOrTouchStart,\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove: function onTouchMove(event) {\n        if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n          return;\n        }\n        inputElement.blur();\n      }\n    }, rest);\n  };\n  var getRootProps = function getRootProps(rest) {\n    return _objectSpread({\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? store.getState().collections.map(function (_ref2) {\n        var source = _ref2.source;\n        return getAutocompleteElementId(props.id, 'list', source);\n      }).join(' ') : undefined,\n      'aria-labelledby': getAutocompleteElementId(props.id, 'label')\n    }, rest);\n  };\n  var getFormProps = function getFormProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n      rest = _objectWithoutProperties(providedProps, _excluded3);\n    return _objectSpread({\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: function onSubmit(event) {\n        var _providedProps$inputE;\n        event.preventDefault();\n        props.onSubmit(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('submit', null);\n        (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n      },\n      onReset: function onReset(event) {\n        var _providedProps$inputE2;\n        event.preventDefault();\n        props.onReset(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('reset', null);\n        (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n      }\n    }, rest);\n  };\n  var getInputProps = function getInputProps(providedProps) {\n    var _props$environment$na;\n    function onFocus(event) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: store.getState().completion || store.getState().query,\n          refresh: refresh,\n          store: store\n        }, setters));\n      }\n      store.dispatch('focus', null);\n    }\n    var _ref3 = providedProps || {},\n      inputElement = _ref3.inputElement,\n      _ref3$maxLength = _ref3.maxLength,\n      maxLength = _ref3$maxLength === void 0 ? 512 : _ref3$maxLength,\n      rest = _objectWithoutProperties(_ref3, _excluded4);\n    var activeItem = getActiveItem(store.getState());\n    var userAgent = ((_props$environment$na = props.environment.navigator) === null || _props$environment$na === void 0 ? void 0 : _props$environment$na.userAgent) || '';\n    var shouldFallbackKeyHint = isSamsung(userAgent);\n    var enterKeyHint = props.enterKeyHint || (activeItem !== null && activeItem !== void 0 && activeItem.itemUrl && !shouldFallbackKeyHint ? 'go' : 'search');\n    return _objectSpread({\n      'aria-autocomplete': 'both',\n      'aria-activedescendant': store.getState().isOpen && store.getState().activeItemId !== null ? getAutocompleteElementId(props.id, \"item-\".concat(store.getState().activeItemId), activeItem === null || activeItem === void 0 ? void 0 : activeItem.source) : undefined,\n      'aria-controls': store.getState().isOpen ? store.getState().collections.map(function (_ref4) {\n        var source = _ref4.source;\n        return getAutocompleteElementId(props.id, 'list', source);\n      }).join(' ') : undefined,\n      'aria-labelledby': getAutocompleteElementId(props.id, 'label'),\n      value: store.getState().completion || store.getState().query,\n      id: getAutocompleteElementId(props.id, 'input'),\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: enterKeyHint,\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength: maxLength,\n      type: 'search',\n      onChange: function onChange(event) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: event.currentTarget.value.slice(0, maxLength),\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown(_objectSpread({\n          event: event,\n          props: props,\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onFocus: onFocus,\n      // We don't rely on the `blur` event.\n      // See explanation in `onTouchStart`/`onMouseDown`.\n      // @MAJOR See if we need to keep this handler.\n      onBlur: noop,\n      onClick: function onClick(event) {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n          onFocus(event);\n        }\n      }\n    }, rest);\n  };\n  var getLabelProps = function getLabelProps(rest) {\n    return _objectSpread({\n      htmlFor: getAutocompleteElementId(props.id, 'input'),\n      id: getAutocompleteElementId(props.id, 'label')\n    }, rest);\n  };\n  var getListProps = function getListProps(providedProps) {\n    var _ref5 = providedProps || {},\n      source = _ref5.source,\n      rest = _objectWithoutProperties(_ref5, _excluded5);\n    return _objectSpread({\n      role: 'listbox',\n      'aria-labelledby': getAutocompleteElementId(props.id, 'label'),\n      id: getAutocompleteElementId(props.id, 'list', source)\n    }, rest);\n  };\n  var getPanelProps = function getPanelProps(rest) {\n    return _objectSpread({\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        event.preventDefault();\n      },\n      onMouseLeave: function onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      }\n    }, rest);\n  };\n  var getItemProps = function getItemProps(providedProps) {\n    var item = providedProps.item,\n      source = providedProps.source,\n      rest = _objectWithoutProperties(providedProps, _excluded6);\n    return _objectSpread({\n      id: getAutocompleteElementId(props.id, \"item-\".concat(item.__autocomplete_id), source),\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove: function onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n        store.dispatch('mousemove', item.__autocomplete_id);\n        var activeItem = getActiveItem(store.getState());\n        if (store.getState().activeItemId !== null && activeItem) {\n          var _item = activeItem.item,\n            itemInputValue = activeItem.itemInputValue,\n            itemUrl = activeItem.itemUrl,\n            _source = activeItem.source;\n          _source.onActive(_objectSpread({\n            event: event,\n            item: _item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: _source,\n            state: store.getState()\n          }, setters));\n        }\n      },\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        event.preventDefault();\n      },\n      onClick: function onClick(event) {\n        var itemInputValue = source.getItemInputValue({\n          item: item,\n          state: store.getState()\n        });\n        var itemUrl = source.getItemUrl({\n          item: item,\n          state: store.getState()\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        var runPreCommand = itemUrl ? Promise.resolve() : onInput(_objectSpread({\n          event: event,\n          nextState: {\n            isOpen: false\n          },\n          props: props,\n          query: itemInputValue,\n          refresh: refresh,\n          store: store\n        }, setters));\n        runPreCommand.then(function () {\n          source.onSelect(_objectSpread({\n            event: event,\n            item: item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: source,\n            state: store.getState()\n          }, setters));\n        });\n      }\n    }, rest);\n  };\n  return {\n    getEnvironmentProps: getEnvironmentProps,\n    getRootProps: getRootProps,\n    getFormProps: getFormProps,\n    getLabelProps: getLabelProps,\n    getInputProps: getInputProps,\n    getPanelProps: getPanelProps,\n    getListProps: getListProps,\n    getItemProps: getItemProps\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}