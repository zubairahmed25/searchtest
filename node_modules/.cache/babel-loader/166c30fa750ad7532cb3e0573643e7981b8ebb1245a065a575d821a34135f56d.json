{"ast":null,"code":"var _jsxFileName = \"/Users/zubairahmed/Desktop/ohpolly-zubair/src/components/AutoCom.jsx\",\n  _s = $RefreshSig$();\nimport { autocomplete } from \"@algolia/autocomplete-js\";\nimport React, { createElement, Fragment, useEffect, useRef } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoCom = props => {\n  _s();\n  const containerRef = useRef(null);\n  const panelRootRef = useRef(null);\n  const rootRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!containerRef.current) {\n      return undefined;\n    }\n    const search = autocomplete({\n      container: containerRef.current,\n      detachedMediaQuery: 'none',\n      onStateChange: e => {\n        var _e$state;\n        return props.setQuery(e === null || e === void 0 ? void 0 : (_e$state = e.state) === null || _e$state === void 0 ? void 0 : _e$state.query);\n      },\n      renderer: {\n        createElement,\n        Fragment,\n        render: () => {}\n      },\n      onSubmit: e => navigate(`/products/${e.state.query}`),\n      render({\n        children\n      }, root) {\n        if (!panelRootRef.current || rootRef.current !== root) {\n          var _panelRootRef$current;\n          rootRef.current = root;\n          (_panelRootRef$current = panelRootRef.current) === null || _panelRootRef$current === void 0 ? void 0 : _panelRootRef$current.unmount();\n          panelRootRef.current = createRoot(root);\n        }\n        panelRootRef.current.render(children);\n      },\n      ...props\n    });\n    return () => {\n      search.destroy();\n    };\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_s(AutoCom, \"NQEQaWylYnkQcC0vbfjAV5TTAXw=\", false, function () {\n  return [useNavigate];\n});\n_c = AutoCom;\nexport default AutoCom;\nvar _c;\n$RefreshReg$(_c, \"AutoCom\");","map":{"version":3,"names":["autocomplete","React","createElement","Fragment","useEffect","useRef","createRoot","useNavigate","jsxDEV","_jsxDEV","AutoCom","props","_s","containerRef","panelRootRef","rootRef","navigate","current","undefined","search","container","detachedMediaQuery","onStateChange","e","_e$state","setQuery","state","query","renderer","render","onSubmit","children","root","_panelRootRef$current","unmount","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zubairahmed/Desktop/ohpolly-zubair/src/components/AutoCom.jsx"],"sourcesContent":["import { autocomplete } from \"@algolia/autocomplete-js\";\nimport React, { createElement, Fragment, useEffect, useRef } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AutoCom = (props) => {\n  const containerRef = useRef(null);\n  const panelRootRef = useRef(null);\n  const rootRef = useRef(null);\n  const navigate=useNavigate()\n  useEffect(() => {\n    if (!containerRef.current) {\n      return undefined;\n    }\n\n    const search = autocomplete({\n      container: containerRef.current,\n      detachedMediaQuery: 'none',\n      onStateChange:e=>props.setQuery(e?.state?.query),\n      renderer: { createElement, Fragment, render: () => {} },\n      onSubmit:(e)=>navigate(`/products/${e.state.query}`),\n      render({ children }, root) {\n        if (!panelRootRef.current || rootRef.current !== root) {\n          rootRef.current = root;\n\n          panelRootRef.current?.unmount();\n          panelRootRef.current = createRoot(root);\n        }\n\n        panelRootRef.current.render(children);\n      },\n      ...props,\n    });\n\n    return () => {\n      search.destroy();\n    };\n  }, [props]);\n\n  return <div ref={containerRef} />;\n};\n\nexport default AutoCom;\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzE,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAMC,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMS,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMU,OAAO,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMW,QAAQ,GAACT,WAAW,CAAC,CAAC;EAC5BH,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,YAAY,CAACI,OAAO,EAAE;MACzB,OAAOC,SAAS;IAClB;IAEA,MAAMC,MAAM,GAAGnB,YAAY,CAAC;MAC1BoB,SAAS,EAAEP,YAAY,CAACI,OAAO;MAC/BI,kBAAkB,EAAE,MAAM;MAC1BC,aAAa,EAACC,CAAC;QAAA,IAAAC,QAAA;QAAA,OAAEb,KAAK,CAACc,QAAQ,CAACF,CAAC,aAADA,CAAC,wBAAAC,QAAA,GAADD,CAAC,CAAEG,KAAK,cAAAF,QAAA,uBAARA,QAAA,CAAUG,KAAK,CAAC;MAAA;MAChDC,QAAQ,EAAE;QAAE1B,aAAa;QAAEC,QAAQ;QAAE0B,MAAM,EAAEA,CAAA,KAAM,CAAC;MAAE,CAAC;MACvDC,QAAQ,EAAEP,CAAC,IAAGP,QAAQ,CAAE,aAAYO,CAAC,CAACG,KAAK,CAACC,KAAM,EAAC,CAAC;MACpDE,MAAMA,CAAC;QAAEE;MAAS,CAAC,EAAEC,IAAI,EAAE;QACzB,IAAI,CAAClB,YAAY,CAACG,OAAO,IAAIF,OAAO,CAACE,OAAO,KAAKe,IAAI,EAAE;UAAA,IAAAC,qBAAA;UACrDlB,OAAO,CAACE,OAAO,GAAGe,IAAI;UAEtB,CAAAC,qBAAA,GAAAnB,YAAY,CAACG,OAAO,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,CAAC,CAAC;UAC/BpB,YAAY,CAACG,OAAO,GAAGX,UAAU,CAAC0B,IAAI,CAAC;QACzC;QAEAlB,YAAY,CAACG,OAAO,CAACY,MAAM,CAACE,QAAQ,CAAC;MACvC,CAAC;MACD,GAAGpB;IACL,CAAC,CAAC;IAEF,OAAO,MAAM;MACXQ,MAAM,CAACgB,OAAO,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;EAEX,oBAAOF,OAAA;IAAK2B,GAAG,EAAEvB;EAAa;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAAC5B,EAAA,CAnCIF,OAAO;EAAA,QAIIH,WAAW;AAAA;AAAAkC,EAAA,GAJtB/B,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}