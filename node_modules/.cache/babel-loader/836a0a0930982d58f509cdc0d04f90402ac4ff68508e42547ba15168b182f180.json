{"ast":null,"code":"/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */\nexport function getNextActiveItemId(moveAmount, baseIndex, itemCount, defaultActiveItemId) {\n  if (!itemCount) {\n    return null;\n  }\n  if (moveAmount < 0 && (baseIndex === null || defaultActiveItemId !== null && baseIndex === 0)) {\n    return itemCount + moveAmount;\n  }\n  var numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultActiveItemId === null ? null : 0;\n  }\n  return numericIndex;\n}","map":{"version":3,"names":["getNextActiveItemId","moveAmount","baseIndex","itemCount","defaultActiveItemId","numericIndex"],"sources":["/Users/zubairahmed/Desktop/ohpolly-zubair/node_modules/@algolia/autocomplete-core/dist/esm/utils/getNextActiveItemId.js"],"sourcesContent":["/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */\nexport function getNextActiveItemId(moveAmount, baseIndex, itemCount, defaultActiveItemId) {\n  if (!itemCount) {\n    return null;\n  }\n  if (moveAmount < 0 && (baseIndex === null || defaultActiveItemId !== null && baseIndex === 0)) {\n    return itemCount + moveAmount;\n  }\n  var numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultActiveItemId === null ? null : 0;\n  }\n  return numericIndex;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,mBAAmBA,CAACC,UAAU,EAAEC,SAAS,EAAEC,SAAS,EAAEC,mBAAmB,EAAE;EACzF,IAAI,CAACD,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EACA,IAAIF,UAAU,GAAG,CAAC,KAAKC,SAAS,KAAK,IAAI,IAAIE,mBAAmB,KAAK,IAAI,IAAIF,SAAS,KAAK,CAAC,CAAC,EAAE;IAC7F,OAAOC,SAAS,GAAGF,UAAU;EAC/B;EACA,IAAII,YAAY,GAAG,CAACH,SAAS,KAAK,IAAI,GAAG,CAAC,CAAC,GAAGA,SAAS,IAAID,UAAU;EACrE,IAAII,YAAY,IAAI,CAAC,CAAC,IAAIA,YAAY,IAAIF,SAAS,EAAE;IACnD,OAAOC,mBAAmB,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC;EAChD;EACA,OAAOC,YAAY;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}